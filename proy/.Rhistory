library(tidyverse)
library(jtools)
# Installs
install.packages("readtext", dependencies=T)
# Imports
library(readtext)
# Path definition of the news archives
path <- '~/Downloads/bbc'
# List with the 5 categories
list_categories <- list.files(path=path)
# Save to dataset the number of files in each category folder
summary_categories <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(summary_categories) <- c('Category', 'Number_of_Files')
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
View(summary_categories)
summary_categories
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
# Cleaning environment data
rm(list = ls())
# Path definition of the news archives
path <- '~/Downloads/bbc'
# List with the 5 categories
list_categories <- list.files(path=path)
# Save to dataset the number of files in each category folder
summary_categories <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(summary_categories) <- c('Category', 'Number_of_Files')
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
summary_categories
# Read every folder and create the final dataframe
df_final <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(df_final) <- c('doc_id', 'text', 'category')
for(category in list_categories){
category_path <- paste(path, category, sep='/')
df <- readtext(category_path)
df["category"] = category
df_final = rbind(df_final, df)
}
colnames(df_final) <- c('File_Name', 'Content', 'Category')
df_final <-
df_final %>%
mutate(Complete_Filename = paste(File_Name, Category, sep='-'))
library(tidyverse)
df_final <-
df_final %>%
mutate(Complete_Filename = paste(File_Name, Category, sep='-'))
# Save dataset: .rda
save(df_final, file='Dataset.rda')
# Load dataset
load(file='Dataset.rda')
View(df_final)
install.packages("readtext")
install.packages("readtext")
df = iris
df
df['Sepal.Length']
df[,1:3]
View(df)
df2 = df[,1:4]
head(df2)
df2*2
head(df2)
df2 <- df2*2
head(df2)
test <- c(1,2,3,4,5,6)
length(test)
cls
clear
clear()
test <- c(1,2,3,4,5,6)
length(test)
library(RPostgreSQL)
library(getPass)
pgdrv <- dbDriver(drvName = "PostgreSQL")
db <-DBI::dbConnect(pgdrv,
dbname="postgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="bigdata",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="postsgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="postsgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
install.packages(c("anytime", "backports", "BDgraph", "bdsmatrix", "BH", "bibtex", "bit", "boot", "broom", "Cairo", "callr", "car", "carData", "checkmate", "classInt", "cli", "clipr", "cluster", "covr", "cowplot", "coxme", "curl", "data.table", "DBI", "dendextend", "Deriv", "devtools", "diffobj", "digest", "dplyr", "dtplyr", "e1071", "effects", "evaluate", "factoextra", "FactoMineR", "fansi", "farver", "forcats", "foreign", "fpc", "fs", "gdtools", "ggm", "ggplot2", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggthemes", "gh", "git2r", "graphlayouts", "hexbin", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "ISOcodes", "jsonlite", "jtools", "kernlab", "KernSmooth", "later", "lattice", "latticeExtra", "leaps", "lifecycle", "listviewer", "manipulateWidget", "mapproj", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "mlogit", "mnormt", "modeltools", "msm", "multcomp", "mvtnorm", "ndjson", "network", "nlme", "nloptr", "nnet", "numDeriv", "OpenMx", "openssl", "openxlsx", "parsedate", "pbkrtest", "pdftools", "pingr", "pkgbuild", "pkgconfig", "plotly", "prabclus", "prettyunits", "processx", "progress", "promises", "ps", "psych", "qgraph", "quanteda", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "Rdpack", "readtext", "regsem", "remotes", "repr", "reticulate", "rgeos", "rgl", "rmarkdown", "robustbase", "rpf", "RSpectra", "rstudioapi", "Rttf2pt1", "scales", "selectr", "sf", "shiny", "shinytest", "slam", "sna", "sp", "spacyr", "SparseM", "StanHeaders", "statmod", "stringi", "survey", "survival", "svglite", "sys", "tensorflow", "testthat", "tidyselect", "tinytex", "tm", "topicmodels", "trimcluster", "units", "usethis", "vcd", "vdiffr", "webshot", "whisker", "xfun", "XML", "xts", "yaml", "zip", "zoo"))
cleart
setwd('~/BI/proy')
datos<- read.csv('scrap_data_final.csv',sep = ';',stringsAsFactors = FALSE)
head(datos)
sum(is.na(datos))
library(ggplot2)
# Basic histogram
ggplot(datos$quantity, aes(x=weight)) + geom_histogram()
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=weight)) + geom_histogram()
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram()
table(quantity)
table(datos$quantity)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 10)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 1)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 3)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram()
datos <- na.omit(datos)
datos <- na.omit(datos)
sum(is.na(datos))
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram()
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 1000)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 1000000)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(binwidth = 100000)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 100)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 10000)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 1000)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 100)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 300)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 150)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 150, binwidth = 10)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 150, binwidth = 150)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 150, binwidth = 300)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 300, binwidth = 300)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 700, binwidth = 300)
library(ggplot2)
# Basic histogram
ggplot(datos, aes(x=quantity)) + geom_histogram(bins = 18000, binwidth = 300)
p<-ggplot(data=datos, aes(x=wk, y=fa_pn)) +
geom_bar(stat="identity")
p
# Horizontal bar plot
p + coord_flip()
p<-ggplot(data=df, aes(x=wk, y=fa_pn)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
p<-ggplot(data=datos, aes(x=wk, y=fa_pn)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
p
p<-ggplot(data=datos, aes(x=wk, y=cod_defecto)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
p
p<-ggplot(data=datos, aes(x=wk, y=quantity)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
p
install.packages("clValid")
datos<- read.csv('scrap_data_final.csv',sep = ';',stringsAsFactors = FALSE)
head(datos)
data2 <- datos[c(1:2,4:7,9:11)]
data2$production_family <- as.factor(data2$production_family)
data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
data2$pn_componente <- as.factor(data2$pn_componente)
data2$wo <- as.factor(data2$wo )
data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2))
library(ggplot2)
library(factoextra)
library(kableExtra)
library(cluster)
library(NbClust)
library(mltools)
datos <- na.omit(datos)
data2 <- datos[c(1:2,4:7,9:11)]
data2$production_family <- as.factor(data2$production_family)
data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
data2$pn_componente <- as.factor(data2$pn_componente)
data2$wo <- as.factor(data2$wo )
data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2))
library(ggplot2)
library(factoextra)
library(kableExtra)
library(cluster)
library(NbClust)
library(mltools)
library(data.table)
data2 <- datos[c(1:2,4:7,9:11)]
data2$production_family <- as.factor(data2$production_family)
data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
data2$pn_componente <- as.factor(data2$pn_componente)
data2$wo <- as.factor(data2$wo )
data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2))
View(datos)
data2 <- datos[c(1,4,9,11)]
data2$production_family <- as.factor(data2$production_family)
data2$wk <- as.factor(data2$wk)
data2 <- datos[c(1,4,9,11)]
data2$production_family <- as.factor(data2$production_family)
#data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
# data2$pn_componente <- as.factor(data2$pn_componente)
# data2$wo <- as.factor(data2$wo )
# data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2))
# ejecución del algoritmo kmeans con k =3
clusters <- kmeans(ddata,2,nstart=20)
table(clusters$cluster)
# cálculo del score Silhouette
#score_sil<- silhouette(clusters$cluster,daisy(dataSet))
# cálculo del valor óptimo de k usando el score silhouette
fviz_nbclust(ddata,kmeans,method = 'silhouette',k.max = 10)
View(data2)
View(data2)
resultado <- data.frame(clusters$cluster,data2)
kable(head(resultado)) %>% kable_styling(full_width = F)
# construir un grafico de los clusters usando ggplot2
ggplot(data2,
aes(data2$turno,data2$label,color = clusters$cluster)) + geom_point()+
ggtitle(label='Distribución por cluster')
View(data2)
data2 <- datos[c(1,4,9,11)]
data2$production_family <- as.factor(data2$production_family)
#data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
# data2$pn_componente <- as.factor(data2$pn_componente)
# data2$wo <- as.factor(data2$wo )
# data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2[1,2,4]))
data2 <- datos[c(1,4,9,11)]
data2$production_family <- as.factor(data2$production_family)
#data2$wk <- as.factor(data2$wk)
data2$fa_pn <- as.factor(data2$fa_pn)
# data2$pn_componente <- as.factor(data2$pn_componente)
# data2$wo <- as.factor(data2$wo )
# data2$linea <- as.factor(data2$linea)
data2$turno<- as.factor(data2$turno)
ddata<-one_hot(as.data.table(data2[c(1,2,4)]))
# ejecución del algoritmo kmeans con k =3
clusters <- kmeans(ddata,2,nstart=20)
resultado <- data.frame(clusters$cluster,data2)
kable(head(resultado)) %>% kable_styling(full_width = F)
table(clusters$cluster)
View(ddata)
# construir un grafico de los clusters usando ggplot2
ggplot(data2,
aes(data2$turno,data2$label,color = clusters$cluster)) + geom_point()+
ggtitle(label='Distribución por cluster')
View(data2)
# cálculo del score Silhouette
#score_sil<- silhouette(clusters$cluster,daisy(dataSet))
# cálculo del valor óptimo de k usando el score silhouette
fviz_nbclust(ddata,kmeans,method = 'silhouette',k.max = 10)
data2$cluster <- clusters$cluster
View(data2)
data2$cluster <- clusters$cluster
test <- subset(data2, data2$label == 1 & data2$cluster1)
data2$cluster <- clusters$cluster
test <- subset(data2, data2$label == 1 & data2$cluster == 1)
data2$cluster <- clusters$cluster
test <- subset(data2, data2$label == 1 & data2$cluster == 2)
data2$cluster <- clusters$cluster
test <- subset(data2, data2$label == 1 & data2$cluster == 2)
data2$cluster <- clusters$cluster
test <- subset(data2, data2$label == 1 & data2$cluster == 1)
data2$cluster <- clusters$cluster
datos$cluster <- clusters$cluster
# se calculan las distancias entre los puntos
matriz_distancias<- dist(ddata,method = 'euclidean')
# se establece el criterio de linkage y se ejecuta el clustering
clustJer_conAvg<- hclust(matriz_distancias,method = 'average')
# se genera un segundo clustering usando otro criterio de linkage
clustJer_single<- hclust(matriz_distancias,method = 'single')
# dendrograma del clustering  usando average
plot(clustJer_conAvg)
plot(clustJer_single)
dendrograma<-as.dendrogram(clustJer_conAvg)
color_dendro<- color_branches(dendrograma,k=4)
fviz_dend(clustJer_conAvg,k=4)
View(datos)
table(clustersJer)
# generar los clusters usando kmedoids
clusters_kmedoids<-pam(ddata,2)
View(data2)
clusters_kmedoids$medoids
table(clusters_kmedoids$clustering)
# visualización de los clusters
fviz_cluster(clusters_kmedoids,data=dataSet,palette='jco')
# visualización de los clusters
fviz_cluster(clusters_kmedoids,data=ddata,palette='jco')
write.csv(data2, file='scrap_data_final_clusters.csv')
setwd("~/BI/proy")
write.csv(data2, file='scrap_data_final_clusters.csv')
write.csv(datos, file='scrap_data_final_clusters.csv')
write.csv(datos, file='scrap_data_final_clusters.csv', row.names = FALSE)
