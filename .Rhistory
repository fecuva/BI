library(tidyverse)
library(jtools)
# Installs
install.packages("readtext", dependencies=T)
# Imports
library(readtext)
# Path definition of the news archives
path <- '~/Downloads/bbc'
# List with the 5 categories
list_categories <- list.files(path=path)
# Save to dataset the number of files in each category folder
summary_categories <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(summary_categories) <- c('Category', 'Number_of_Files')
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
View(summary_categories)
summary_categories
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
# Cleaning environment data
rm(list = ls())
# Path definition of the news archives
path <- '~/Downloads/bbc'
# List with the 5 categories
list_categories <- list.files(path=path)
# Save to dataset the number of files in each category folder
summary_categories <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(summary_categories) <- c('Category', 'Number_of_Files')
for (category in list_categories){
category_path <- paste(path, category, sep='/')
n_files <- length(list.files(path=category_path))
summary_categories = rbind(summary_categories, data.frame('Category'=category, 'Number_of_Files'=n_files))
}
summary_categories
# Read every folder and create the final dataframe
df_final <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(df_final) <- c('doc_id', 'text', 'category')
for(category in list_categories){
category_path <- paste(path, category, sep='/')
df <- readtext(category_path)
df["category"] = category
df_final = rbind(df_final, df)
}
colnames(df_final) <- c('File_Name', 'Content', 'Category')
df_final <-
df_final %>%
mutate(Complete_Filename = paste(File_Name, Category, sep='-'))
library(tidyverse)
df_final <-
df_final %>%
mutate(Complete_Filename = paste(File_Name, Category, sep='-'))
# Save dataset: .rda
save(df_final, file='Dataset.rda')
# Load dataset
load(file='Dataset.rda')
View(df_final)
install.packages("readtext")
install.packages("readtext")
df = iris
df
df['Sepal.Length']
df[,1:3]
View(df)
df2 = df[,1:4]
head(df2)
df2*2
head(df2)
df2 <- df2*2
head(df2)
test <- c(1,2,3,4,5,6)
length(test)
cls
clear
clear()
test <- c(1,2,3,4,5,6)
length(test)
library(RPostgreSQL)
library(getPass)
pgdrv <- dbDriver(drvName = "PostgreSQL")
db <-DBI::dbConnect(pgdrv,
dbname="postgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="bigdata",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="postsgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
db <-DBI::dbConnect(pgdrv,
dbname="postsgres",
host="localhost", port=5432,
user = 'luisfc',
password = getPass("Enter Password:"))
setwd('./BI/')
install.packages(c('arules','arulesViz','tidyverse','plyr','ggplot2','knitr','lubridate','RColorBrewer'))
install.packages(c("arules", "arulesViz", "tidyverse", "plyr", "ggplot2", "knitr", "lubridate", "RColorBrewer"))
datos<- read.csv('AdultosUSA.csv',sep=';',dec=',',stringsAsFactors = FALSE)
head(datos)
str(datos)
View(datos)
library(arules)
library(arulesViz)
library(tidyverse)
library(plyr)
library(ggplot2)
library(knitr)
library(lubridate)
library(RColorBrewer)
datos2 <- as(datps, "transactions")
datos2 <- as(datos, "transactions")
str(datos)
datos %>% mutate(Ingresos=as.factor(Ingresos))
datos %>% mutate(Ocupacion=as.factor(Ocupacion))
datos %>% mutate(HorasSemanales=as.factor(as.character(HorasSemanales)))
str(datos)
datos %>% mutate(Ingresos=as.factor(Ingresos))
str(datos)
datos$Ingresos <- as.factor(Ingresos)
View(datos)
colnames(datos)
str(datos)
class(datos$Ingresos)
datos$Ingresos <- as_factor(datos$Ingresos)
str(datos)
datos %>% mutate(Ingresos=as_factor(Ingresos))
datos %>% mutate(Ocupacion=as_factor(Ocupacion))
datos %>% mutate(HorasSemanales=as_factor(as.character(HorasSemanales)))
str(datos)
datos$Ocupacion <- as_factor(datos$Ocupacion)
datos$HorasSemanales <- as_factor(datos$HorasSemanales)
str(datos)
datos <-
datos[1,]
datos[1,]
datos[1]
datos<- as_factor(as.character(datos))
str(datos)
str(datos)
datos<- read.csv('AdultosUSA.csv',sep=';',dec=',',stringsAsFactors = FALSE)
datos<- lapply(datos, as_factor)
datos<- data_frame(lapply(datos, as_factor))
datos<- read.csv('AdultosUSA.csv',sep=';',dec=',',stringsAsFactors = FALSE)
datos<- data_frame(lapply(datos, as_factor))
datos<- read.csv('AdultosUSA.csv',sep=';',dec=',',stringsAsFactors = FALSE)
datos<- data.frame(lapply(datos, as_factor))
View(datos)
str(datos)
datos2 <- as(datos, "transactions")
reglas<- apriori(transacc,parameter = list(supp=0.001,conf=0.8,maxlen=10))
reglas<- apriori(datos2,parameter = list(supp=0.001,conf=0.8,maxlen=10))
inspect(reglas[1:10])
subconjuntos<- which(colSums(is.subset(reglas,reglas))>1)
reglasFinal<- reglas[-subconjuntos]
inspect(reglasFinal[1:10])
# se filtran las reglas con confianza superior a 0.25
mejoresReglas<- reglasFinal[quality(reglasFinal)$confidence>0.25]
cincoMejores<- head(mejoresReglas,n=5,by='confidence')
plot(cincoMejores,method = 'graph',engine = 'htmlwidget')
Top20<-head(mejoresReglas,n=20,by='confidence')
plot(Top20,method ='paracoord')
plot(cincoMejores,method = 'graph',engine = 'htmlwidget')
reglasAntIngMay50<- apriori(transacc,parameter =list(supp=0.001,conf=0.8),
appearance = list(default='lhs',rhs='=50K.')  )
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.001,conf=0.8),
appearance = list(default='lhs',rhs='=50K.')  )
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.001,conf=0.8),
appearance = list(default='lhs',rhs='<=50K.')  )
View(datos)
str(datos)
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.001,conf=0.8),
appearance = list(default='lhs',rhs='<=50K.'))
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.001,conf=0.8),
appearance = list(default='lhs',rhs='Ingresos=<=50K.'))
inspect(head(reglasAntGreeting))
inspect(head(reglasAntIngMay50))
View(datos2)
inspect(head(reglasAntIngMay50))
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.01,conf=0.8),
appearance = list(default='lhs',rhs='Ingresos=<=50K.'))
inspect(head(reglasAntIngMay50))
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.0011,conf=0.9),
appearance = list(default='lhs',rhs='Ingresos=<=50K.'))
inspect(head(reglasAntIngMay50))
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.0011,conf=0.9),
appearance = list(default='lhs',rhs='Ingresos>50K.'))
reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.0011,conf=0.9),
appearance = list(default='lhs',rhs='Ingresos=>50K.'))
inspect(head(reglasAntIngMay50))
library(arules)
library(arulesViz)
library(tidyverse)
library(plyr)
library(ggplot2)
library(knitr)
library(lubridate)
library(RColorBrewer)
# Aqui creo un objeto tipo transactions para el análisis
datos2 <- as(datos, "transactions")
# Aqui inicia la parte de Reglas
# reglas<- apriori(datos2,parameter = list(supp=0.001,conf=0.8,maxlen=10))
# inspect(reglas[1:10])
#
# subconjuntos<- which(colSums(is.subset(reglas,reglas))>1)
#
# reglasFinal<- reglas[-subconjuntos]
# inspect(reglasFinal[1:10])
#
#
#
# # se filtran las reglas con confianza superior a 0.25
# mejoresReglas<- reglasFinal[quality(reglasFinal)$confidence>0.25]
#
# # graficar las 5 mejores reglas
#
# cincoMejores<- head(mejoresReglas,n=5,by='confidence')
#
# plot(cincoMejores,method = 'graph',engine = 'htmlwidget')
#
#
# reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.0011,conf=0.9),
#                             appearance = list(default='lhs',rhs='Ingresos=>50K.'))
#
# inspect(head(reglasAntIngMay50))
# Aqui creo un objeto tipo transactions para el análisis
datos2 <- as(datos, "transactions")
# Aqui inicia la parte de Reglas
# reglas<- apriori(datos2,parameter = list(supp=0.001,conf=0.8,maxlen=10))
# inspect(reglas[1:10])
#
# subconjuntos<- which(colSums(is.subset(reglas,reglas))>1)
#
# reglasFinal<- reglas[-subconjuntos]
# inspect(reglasFinal[1:10])
#
#
#
# # se filtran las reglas con confianza superior a 0.25
# mejoresReglas<- reglasFinal[quality(reglasFinal)$confidence>0.25]
#
# # graficar las 5 mejores reglas
#
# cincoMejores<- head(mejoresReglas,n=5,by='confidence')
#
# plot(cincoMejores,method = 'graph',engine = 'htmlwidget')
#
#
# reglasAntIngMay50<- apriori(datos2,parameter =list(supp=0.0011,conf=0.9),
#                             appearance = list(default='lhs',rhs='Ingresos=>50K.'))
#
# inspect(head(reglasAntIngMay50))
library(arules)
library(arulesViz)
library(tidyverse)
library(plyr)
library(ggplot2)
library(knitr)
library(lubridate)
library(RColorBrewer)
datos<- read.csv('AdultosUSA.csv',stringsAsFactors = FALSE)
head(datos)
str(datos)
sum(is.na(datos))
# datos %>% mutate(Ingresos=as.factor(Ingresos))
# datos %>% mutate(Ocupacion=as.factor(Ocupacion))
# datos %>% mutate(HorasSemanales=as.factor(as.character(HorasSemanales)))
#Con este de abajo convertí todos los elementos a factores
datos<- data.frame(lapply(datos, as_factor))
# Aqui creo un objeto tipo transactions para el análisis
datos2 <- as(datos, "transactions")
inspect(reglas[1:10])
# inspect(reglas[1:10,])
#
subconjuntos<- which(colSums(is.subset(reglas,reglas))>1)
